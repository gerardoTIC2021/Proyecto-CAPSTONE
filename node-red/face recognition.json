[
    {
        "id": "d1d47db59a048d9f",
        "type": "tab",
        "label": "Capstone Face Detection",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9ed4172e09fd4c85",
        "type": "http request",
        "z": "d1d47db59a048d9f",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.1.68/capture",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "be2302bd37d3bdcf"
            ]
        ]
    },
    {
        "id": "8266a35de559db79",
        "type": "file",
        "z": "d1d47db59a048d9f",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "setbymsg",
        "x": 820,
        "y": 160,
        "wires": [
            [
                "d47c8ef399d5b55e"
            ]
        ]
    },
    {
        "id": "be2302bd37d3bdcf",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "msg.filename = \"/home/gbarron/capstone/src/cam_photos/\"+global.get (\"fecha\")+\".jpg\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 260,
        "wires": [
            [
                "8266a35de559db79"
            ]
        ]
    },
    {
        "id": "bd811d82ce417bdd",
        "type": "exec",
        "z": "d1d47db59a048d9f",
        "command": "python3 /home/gbarron/capstone/src/facecheckMQTT.py ",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 290,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d47c8ef399d5b55e",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "msg.command = \" -i \" +msg.filename + \" -j /home/gbarron/capstone/src/my_db/\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "bd811d82ce417bdd"
            ]
        ]
    },
    {
        "id": "d6bcd5377b0b7956",
        "type": "ui_template",
        "z": "d1d47db59a048d9f",
        "group": "1b4921a5b094ee9c",
        "name": "Captura de Imagen",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<style>\n.wrap\n{\n    width: 800px;\n    height: 600px;\n    padding: 0;\n    overflow: hidden;\n}\n\n.frame\n{\n    width: 1280px;\n    height: 786px;\n    border: 1;\n\n    -ms-transform: scale(1.75);\n    -moz-transform: scale(1.75);\n    -o-transform: scale(1.75);\n    -webkit-transform: scale(1.75);\n    transform: scale(1.75);\n\n    -ms-transform-origin: 0 0;\n    -moz-transform-origin: 0 0;\n    -o-transform-origin: 0 0;\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n}\n</style>\n\n<div class=\"wrap\">\n<iframe id=\"inlineFrameExample\"\n    title=\"CÃ mara en Vivo\"\n    width=\"400\"\n    height=\"300\"\n    allow=\"fullscreen\"\n    class=\"frame\">\n</iframe>\n</div>\n<script>\n    (function(scope) {\n        scope.$watch('msg.ip', function(data) {\n            var a = document.getElementById(\"inlineFrameExample\");\n            var url = data + ':81/stream';\n            a.setAttribute(\"src\", url);\n            console.log(\"URL: \" + url);\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "0ce626655471e7f1"
            ]
        ]
    },
    {
        "id": "88fc9c39758e80dc",
        "type": "mqtt in",
        "z": "d1d47db59a048d9f",
        "name": "",
        "topic": "capstone/facial",
        "qos": "2",
        "datatype": "auto",
        "broker": "02c2c8eacc2236c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 540,
        "wires": [
            [
                "759e734576cad0db"
            ]
        ]
    },
    {
        "id": "759e734576cad0db",
        "type": "json",
        "z": "d1d47db59a048d9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "0bde3fd4c60659d4"
            ]
        ]
    },
    {
        "id": "0bde3fd4c60659d4",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "var lista = Object.keys(msg.payload).length;\nlet lst = [lista];\nfor (var i = 0; i < lista; i++) {\n    lst [i] = msg.payload[i][\"VGG-Face_cosine\"];\n}\nmsg.lista = lst;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 540,
        "wires": [
            [
                "39628b75c43e4a04"
            ]
        ]
    },
    {
        "id": "633b5a358ef33721",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "var lista = Object.keys(msg.payload).length;\nfor (var i = 0; i < lista; i++) {\n    if (msg.max == msg.payload[i][\"VGG-Face_cosine\"]) {\n        msg.iden = msg.payload[i].identity;\n        msg.index = i;\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "6b3897981e907b57"
            ]
        ]
    },
    {
        "id": "da7fe27c47114e33",
        "type": "file in",
        "z": "d1d47db59a048d9f",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 720,
        "wires": [
            [
                "8b80a2af360d77c6"
            ]
        ]
    },
    {
        "id": "8b80a2af360d77c6",
        "type": "json",
        "z": "d1d47db59a048d9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "e59f9e12fa67a57c"
            ]
        ]
    },
    {
        "id": "9953c9e23533844b",
        "type": "ui_button",
        "z": "d1d47db59a048d9f",
        "name": "",
        "group": "d95312025038bb8e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Analizar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "9ed4172e09fd4c85"
            ]
        ]
    },
    {
        "id": "681aec220ea4ce3f",
        "type": "ui_text",
        "z": "d1d47db59a048d9f",
        "group": "d95312025038bb8e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Persona",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 700,
        "wires": []
    },
    {
        "id": "96617b5514fd06cc",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "msg.max = 100 - msg.max * 100;\nmsg.max = Math.round(msg.max);\n\nemail = msg.payload.email;\n\nconst today = new Date();\n\nvar day = today.getDate();\nvar mm = today.getMonth()+1; \nvar yyyy = today.getFullYear();\n\nvar dd = \"01\";\n\nif (day < 10) {\n     dd = \"0\" + day.toString();\n} else {\n    dd = day.toString();\n}\n\nif (mm < 10) {\n     mm = \"0\" + mm.toString();\n}\n\nfecha = mm + \"/\" + dd + \"/\" + yyyy;\n\nsql = \"Insert Into visita(email, fecha) values ('\" + email + \"','\" + fecha + \"')\";\n\nmsg.topic = sql;\nmsg.atencion = \"Favor de atender \" + msg.payload.nombre;\nmsg.payload = \"Welcome \" + msg.payload.nombre;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 780,
        "wires": [
            [
                "681aec220ea4ce3f",
                "e83daf83635e8a23",
                "3982d55d78fc96e4",
                "555c3dcd628bca4a",
                "2e2c1d4a109324ad"
            ]
        ]
    },
    {
        "id": "9572b51ea83460e3",
        "type": "inject",
        "z": "d1d47db59a048d9f",
        "name": "",
        "props": [
            {
                "p": "ip",
                "v": "http://192.168.1.68",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "d3cdeb62982ef474"
            ]
        ]
    },
    {
        "id": "39628b75c43e4a04",
        "type": "calculator",
        "z": "d1d47db59a048d9f",
        "name": "",
        "inputMsgField": "lista",
        "outputMsgField": "max",
        "operation": "min",
        "constant": "",
        "round": false,
        "decimals": 0,
        "x": 800,
        "y": 540,
        "wires": [
            [
                "633b5a358ef33721"
            ]
        ]
    },
    {
        "id": "6b3897981e907b57",
        "type": "string",
        "z": "d1d47db59a048d9f",
        "name": "",
        "methods": [
            {
                "name": "append",
                "params": [
                    {
                        "type": "msg",
                        "value": "iden"
                    }
                ]
            },
            {
                "name": "delRightMost",
                "params": [
                    {
                        "type": "str",
                        "value": "/"
                    }
                ]
            },
            {
                "name": "append",
                "params": [
                    {
                        "type": "str",
                        "value": "/info.json"
                    }
                ]
            }
        ],
        "prop": "",
        "propout": "filename",
        "object": "str",
        "objectout": "msg",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "da7fe27c47114e33"
            ]
        ]
    },
    {
        "id": "e59f9e12fa67a57c",
        "type": "switch",
        "z": "d1d47db59a048d9f",
        "name": "",
        "property": "max",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0.4",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "0.4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "38a3344308e49191"
            ],
            [
                "96617b5514fd06cc"
            ]
        ]
    },
    {
        "id": "38a3344308e49191",
        "type": "function",
        "z": "d1d47db59a048d9f",
        "name": "",
        "func": "email = \"Nuevo\";\n\nconst today = new Date();\n\nvar day = today.getDate();\nvar mm = today.getMonth()+1; \nvar yyyy = today.getFullYear();\n\nvar dd = \"01\";\nif (day < 10) {\n     dd = \"0\" + day.toString();\n} else {\n    dd = day.toString();\n}\n\nif (mm < 10) {\n     mm = \"0\" + mm.toString();\n}\n\nfecha = mm + \"/\" + dd + \"/\" + yyyy;\n\nsql = \"Insert Into visita(email, fecha) values ('\" + email + \"','\" + fecha + \"')\";\n\nmsg.topic = sql;\nmsg.atencion = \"Favor de atender cliente nuevo\";\nmsg.payload = \"Welcome to Store\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 700,
        "wires": [
            [
                "681aec220ea4ce3f",
                "fbbbfac1b36e36ff",
                "3982d55d78fc96e4",
                "555c3dcd628bca4a",
                "2e2c1d4a109324ad"
            ]
        ]
    },
    {
        "id": "3982d55d78fc96e4",
        "type": "sqlite",
        "z": "d1d47db59a048d9f",
        "mydb": "2f6110cac9bde9d5",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert Visita",
        "x": 1170,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "e83daf83635e8a23",
        "type": "debug",
        "z": "d1d47db59a048d9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 900,
        "wires": []
    },
    {
        "id": "fbbbfac1b36e36ff",
        "type": "debug",
        "z": "d1d47db59a048d9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "555c3dcd628bca4a",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "d1d47db59a048d9f",
        "name": "Send WhatsApp",
        "account": "feb0bdcca78a5ea1",
        "text": "payload",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 1180,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "2e2c1d4a109324ad",
        "type": "mqtt out",
        "z": "d1d47db59a048d9f",
        "name": "",
        "topic": "capstone/utng/ledmatrix",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e3d8e2223ef53feb",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "0ce626655471e7f1",
        "type": "debug",
        "z": "d1d47db59a048d9f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "d3cdeb62982ef474",
        "type": "change",
        "z": "d1d47db59a048d9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ip",
                "pt": "msg",
                "to": "http://192.168.1.68",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "d6bcd5377b0b7956"
            ]
        ]
    },
    {
        "id": "c2a2799980ad96ed",
        "type": "ui_spacer",
        "z": "d1d47db59a048d9f",
        "name": "spacer",
        "group": "61ec25a9be0ed64a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "0e079e8fd1ce54db",
        "type": "ui_spacer",
        "z": "d1d47db59a048d9f",
        "name": "spacer",
        "group": "61ec25a9be0ed64a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "1b4921a5b094ee9c",
        "type": "ui_group",
        "name": "Captura de Imagen",
        "tab": "df3eb9a279d8b929",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "02c2c8eacc2236c8",
        "type": "mqtt-broker",
        "name": "Capstone Facial",
        "broker": "192.168.1.70",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d95312025038bb8e",
        "type": "ui_group",
        "name": "Display Datos",
        "tab": "df3eb9a279d8b929",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f6110cac9bde9d5",
        "type": "sqlitedb",
        "db": "/home/gbarron/capstone/src/capstone.db",
        "mode": "RWC"
    },
    {
        "id": "feb0bdcca78a5ea1",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Gabo"
    },
    {
        "id": "e3d8e2223ef53feb",
        "type": "mqtt-broker",
        "name": "capstone/utng/ledmatrix",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "61ec25a9be0ed64a",
        "type": "ui_group",
        "name": "Display QrCode",
        "tab": null,
        "order": 2,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "df3eb9a279d8b929",
        "type": "ui_tab",
        "name": "Reconocimiento Facial",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    }
]